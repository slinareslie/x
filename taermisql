$fecha = Get-Date -Format "dd-MM-yyyy"
$csvPath = "D:\Ordenar Scripts\Scripts probar\Transportista Descargar\consulta_resultado.csv"
$excelPath = "D:\Ordenar Scripts\Scripts probar\Transportista Descargar\consulta_resultado.xlsx"

# Iniciar Excel
$excelApp = New-Object -ComObject Excel.Application
$excelApp.Visible = $false
$excelApp.DisplayAlerts = $false

# Abrir archivo CSV
$workbook = $excelApp.Workbooks.Open($csvPath)
$worksheet = $workbook.Sheets.Item(1)

# Detectar el rango usado
$usedRange = $worksheet.UsedRange
$rowCount = $usedRange.Rows.Count
$colCount = $usedRange.Columns.Count

# Crear tabla si hay datos
if ($rowCount -ge 2 -and $colCount -ge 1) {
    $startCell = $worksheet.Cells.Item(1,1).Address()
    $endCell = $worksheet.Cells.Item($rowCount, $colCount).Address()
    $tableRange = "${startCell}:${endCell}"
    
    # Crear la tabla y nombrarla
    $range = $worksheet.Range($tableRange)
    $listObjects = $worksheet.ListObjects
    $table = $listObjects.Add(1, $range, $null, 1)  # xlSrcRange = 1, xlYes = 1 (tiene encabezados)
    $table.Name = "TablaSigad"
} else {
    Write-Host "No hay suficientes datos para crear una tabla."
}

# Guardar como archivo Excel (.xlsx)
$workbook.SaveAs($excelPath, [Microsoft.Office.Interop.Excel.XlFileFormat]::xlOpenXMLWorkbook)
$workbook.Close($false)
$excelApp.Quit()

# Liberar objetos COM
if ($table) { [System.Runtime.Interopservices.Marshal]::ReleaseComObject($table) | Out-Null }
[System.Runtime.Interopservices.Marshal]::ReleaseComObject($worksheet) | Out-Null
[System.Runtime.Interopservices.Marshal]::ReleaseComObject($workbook) | Out-Null
[System.Runtime.Interopservices.Marshal]::ReleaseComObject($excelApp) | Out-Null
[GC]::Collect()
[GC]::WaitForPendingFinalizers()
